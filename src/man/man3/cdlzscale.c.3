.TH "cdlzscale.c" 3 "23 Dec 2003" "imcat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cdlzscale.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <math.h>\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBMIN_NPIXELS\fP   5"
.br
.ti -1c
.RI "#define \fBMAX_REJECT\fP   0.5"
.br
.ti -1c
.RI "#define \fBGOOD_PIXEL\fP   0"
.br
.ti -1c
.RI "#define \fBBAD_PIXEL\fP   1"
.br
.ti -1c
.RI "#define \fBREJECT_PIXEL\fP   2"
.br
.ti -1c
.RI "#define \fBKREJ\fP   2.5"
.br
.ti -1c
.RI "#define \fBMAX_ITERATIONS\fP   5"
.br
.ti -1c
.RI "#define \fBINDEF\fP   0"
.br
.ti -1c
.RI "#define \fBmax\fP(\fBa\fP, \fBb\fP)   ((\fBa\fP) > (\fBb\fP) ? (\fBa\fP) : (\fBb\fP))"
.br
.ti -1c
.RI "#define \fBmin\fP(\fBa\fP, \fBb\fP)   ((\fBa\fP) < (\fBb\fP) ? (\fBa\fP) : (\fBb\fP))"
.br
.ti -1c
.RI "#define \fBmod\fP(\fBa\fP, \fBb\fP)   ((\fBa\fP) % (\fBb\fP))"
.br
.ti -1c
.RI "#define \fBnint\fP(\fBa\fP)   ((int)(\fBa\fP + 0.5))"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBrejectPixels\fP ()"
.br
.ti -1c
.RI "int \fBcomputeSigma\fP ()"
.br
.ti -1c
.RI "int \fBsampleImage\fP ()"
.br
.ti -1c
.RI "int \fBfitLine\fP ()"
.br
.ti -1c
.RI "int \fBfloatCompare\fP ()"
.br
.ti -1c
.RI "void \fBflattenData\fP ()"
.br
.ti -1c
.RI "void \fBsubSample\fP ()"
.br
.ti -1c
.RI "void \fBcdl_zscale\fP (unsigned char *im, int \fBnx\fP, int \fBny\fP, int \fBbitpix\fP, float *\fBz1\fP, float *\fBz2\fP, float contrast, int opt_size, int len_stdline)"
.br
.ti -1c
.RI "int \fBsampleImage\fP (unsigned char *im, int \fBbitpix\fP, float **sample, int \fBnx\fP, int \fBny\fP, int optimal_size, int len_stdline)"
.br
.ti -1c
.RI "void \fBsubSample\fP (float *\fBa\fP, float *\fBb\fP, int npix, int step)"
.br
.ti -1c
.RI "int \fBfitLine\fP (float *\fBdata\fP, int npix, float *zstart, float *zslope, float krej, int ngrow, int maxiter)"
.br
.ti -1c
.RI "void \fBflattenData\fP (float *\fBdata\fP, float *flat, float *x, int npix, float z0, float dz)"
.br
.ti -1c
.RI "int \fBcomputeSigma\fP (float *\fBa\fP, short *badpix, int npix, float *mean, float *\fBsigma\fP)"
.br
.ti -1c
.RI "int \fBrejectPixels\fP (float *\fBdata\fP, float *flat, float *normx, short *badpix, int npix, double *sumxsqr, double *sumxz, double *sumx, double *sumz, float threshold, int ngrow)"
.br
.ti -1c
.RI "int \fBfloatCompare\fP (float *\fBi\fP, float *\fBj\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBcdl_debug\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define BAD_PIXEL   1"
.PP
Definition at line 27 of file cdlzscale.c.
.PP
Referenced by rejectPixels().
.SS "#define GOOD_PIXEL   0"
.PP
Definition at line 26 of file cdlzscale.c.
.PP
Referenced by computeSigma().
.SS "#define INDEF   0"
.PP
Definition at line 31 of file cdlzscale.c.
.SS "#define KREJ   2.5"
.PP
Definition at line 29 of file cdlzscale.c.
.PP
Referenced by cdl_zscale().
.SS "#define max(\fBa\fP, \fBb\fP)   ((\fBa\fP) > (\fBb\fP) ? (\fBa\fP) : (\fBb\fP))"
.PP
Definition at line 34 of file cdlzscale.c.
.SS "#define MAX_ITERATIONS   5"
.PP
Definition at line 30 of file cdlzscale.c.
.PP
Referenced by cdl_zscale().
.SS "#define MAX_REJECT   0.5"
.PP
Definition at line 25 of file cdlzscale.c.
.PP
Referenced by cdl_zscale(), and fitLine().
.SS "#define min(\fBa\fP, \fBb\fP)   ((\fBa\fP) < (\fBb\fP) ? (\fBa\fP) : (\fBb\fP))"
.PP
Definition at line 36 of file cdlzscale.c.
.SS "#define MIN_NPIXELS   5"
.PP
Definition at line 24 of file cdlzscale.c.
.PP
Referenced by cdl_zscale(), and fitLine().
.SS "#define mod(\fBa\fP, \fBb\fP)   ((\fBa\fP) % (\fBb\fP))"
.PP
Definition at line 38 of file cdlzscale.c.
.PP
Referenced by cdl_zscale().
.SS "#define nint(\fBa\fP)   ((int)(\fBa\fP + 0.5))"
.PP
Definition at line 40 of file cdlzscale.c.
.PP
Referenced by cdl_zscale(), swapbytes(), and swapint().
.SS "#define REJECT_PIXEL   2"
.PP
Definition at line 28 of file cdlzscale.c.
.PP
Referenced by rejectPixels().
.SH "Function Documentation"
.PP 
.SS "void cdl_zscale (unsigned char    * im, int nx, int ny, int bitpix, float	* z1, float * z2, float contrast, int opt_size, int len_stdline)"
.PP
Definition at line 114 of file cdlzscale.c.
.PP
References bitpix, cdl_debug, fitLine(), floatCompare(), free(), KREJ, max, MAX_ITERATIONS, MAX_REJECT, median(), min, MIN_NPIXELS, mod, nint, nx, ny, sampleImage(), z1, and z2.
.SS "int computeSigma (float	* a, short	* badpix, int npix, float	* mean, float * sigma)"
.PP
Definition at line 536 of file cdlzscale.c.
.PP
References a, GOOD_PIXEL, i, INDEF, mean(), and sigma.
.SS "int computeSigma ()"
.PP
Referenced by fitLine().
.SS "int fitLine (float	* data, int npix, float	* zstart, float	* zslope, float krej, int ngrow, int maxiter)"
.PP
Definition at line 369 of file cdlzscale.c.
.PP
References computeSigma(), flattenData(), free(), i, malloc(), max, MAX_REJECT, mean(), MIN_NPIXELS, rejectPixels(), sigma, x, and z.
.SS "int fitLine ()"
.PP
Referenced by cdl_zscale().
.SS "void flattenData (float	* data, float	* flat, float	* x, int npix, float z0, float dz)\fC [static]\fP"
.PP
Definition at line 504 of file cdlzscale.c.
.PP
References i, and x.
.SS "void flattenData ()\fC [static]\fP"
.PP
Referenced by fitLine().
.SS "int floatCompare (float 	* i, float * j)"
.PP
Definition at line 673 of file cdlzscale.c.
.PP
References i, and j.
.SS "int floatCompare ()"
.PP
Referenced by cdl_zscale().
.SS "int rejectPixels (float	* data, float	* flat, float	* normx, short	* badpix, int npix, double	* sumxsqr, double* sumxz, double* sumx, double* sumz, float threshold, int ngrow)"
.PP
Definition at line 610 of file cdlzscale.c.
.PP
References BAD_PIXEL, i, j, max, min, REJECT_PIXEL, x, and z.
.SS "int rejectPixels ()"
.PP
Referenced by fitLine().
.SS "int sampleImage (unsigned char	* im, int bitpix, float	** sample, int nx, int ny, int optimal_size, int len_stdline)"
.PP
Definition at line 209 of file cdlzscale.c.
.PP
References bitpix, cdl_debug, free(), i, line, malloc(), max, min, nx, ny, op, and subSample().
.SS "int sampleImage ()"
.PP
Referenced by cdl_zscale().
.SS "void subSample (float	* a, float	* b, int npix, int step)\fC [static]\fP"
.PP
Definition at line 326 of file cdlzscale.c.
.PP
References a, b, and i.
.SS "void subSample ()\fC [static]\fP"
.PP
Referenced by sampleImage().
.SH "Variable Documentation"
.PP 
.SS "int \fBcdl_debug\fP"
.PP
Definition at line 43 of file cdlzscale.c.
.PP
Referenced by cdl_applyZscale(), cdl_clearFrame(), cdl_clearOverlay(), cdl_close(), cdl_computeZscale(), cdl_deleteMark(), cdl_displayFITS(), cdl_displayIRAF(), cdl_displayPix(), cdl_doDashedLine(), cdl_doPolygonMark(), cdl_findNearest(), cdl_freeDisplayList(), cdl_getContrast(), cdl_getFBConfig(), cdl_getFrame(), cdl_getName(), cdl_getSample(), cdl_getSampleLines(), cdl_getTitle(), cdl_getWCS(), cdl_getZScale(), cdl_getZTrans(), cdl_lookupFBSize(), cdl_markBox(), cdl_markCircAnnuli(), cdl_markCircle(), cdl_markEllipAnnuli(), cdl_markEllipse(), cdl_markLine(), cdl_markPoint(), cdl_markPointLabel(), cdl_markPolygon(), cdl_markPolyline(), cdl_markText(), cdl_open(), cdl_printPix(), cdl_printPixToFile(), cdl_readCursor(), cdl_readFITS(), cdl_readFITSHdr(), cdl_readFrameBuffer(), cdl_readImage(), cdl_readImageHdr(), cdl_readIRAF(), cdl_readSubRaster(), cdl_redrawOverlay(), cdl_selectFB(), cdl_setContrast(), cdl_setCursor(), cdl_setDebug(), cdl_setFBConfig(), cdl_setFrame(), cdl_setName(), cdl_setSample(), cdl_setSampleLines(), cdl_setTitle(), cdl_setWCS(), cdl_setZScale(), cdl_setZTrans(), cdl_writeSubRaster(), cdl_zscale(), cdl_zscaleImage(), and sampleImage().
.SH "Author"
.PP 
Generated automatically by Doxygen for imcat from the source code.
