.TH "test.c" 3 "23 Dec 2003" "imcat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
test.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <math.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <limits.h>\fP
.br
\fC#include <values.h>\fP
.br
\fC#include '../../imlib/fits.h'\fP
.br
\fC#include '../../utils/error.h'\fP
.br
\fC#include '../../utils/ipbuff.h'\fP
.br
\fC#include '../../utils/arrays.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBusage\fP   '\\n\\\fBn\fP\\\fBn\fP\\NAME\\\fBn\fP\\	makepeff --- compute effective polarisability\\\fBn\fP\\\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	makepeff [-u]\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	'makepeff' first reads from stdin \fBa\fP catalogue which\\\fBn\fP\\	must contain at least the following entries:\\\fBn\fP\\		F	# windowed flux\\\fBn\fP\\		q0	# size\\\fBn\fP\\		q[2]	# polarisation\\\fBn\fP\\		R[2]	# flux response\\\fBn\fP\\		P0[2]	# size response\\\fBn\fP\\		P[2][2]	# polarisation response\\\fBn\fP\\	as created by 'getshapes2'.\\\fBn\fP\\	It bins appropriate combinations of these in \fBa\fP cubical\\\fBn\fP\\	array in F, p0, q space and computes P_effective.\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser --- kaiser@hawaii.edu\\\fBn\fP\\\\\fBn\fP\\\fBn\fP\\\fBn\fP'"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "float *** \fBalloc3Darray\fP (int \fBN1\fP, int \fBN2\fP, int N3)"
.br
.ti -1c
.RI "float *** \fBboxavg3D\fP (float ***f, int \fBN1\fP, int \fBN2\fP, int N3)"
.br
.ti -1c
.RI "float *** \fBgrad3D\fP (float ***f, int \fBdir\fP, double \fBdx\fP, int \fBN1\fP, int \fBN2\fP, int N3)"
.br
.ti -1c
.RI "\fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "Warning \fB__pad0__\fP"
.br
.ti -1c
.RI "Warning int \fBdir\fP"
.br
.ti -1c
.RI "Warning int double \fBdx\fP"
.br
.ti -1c
.RI "Warning int double int \fBN1\fP"
.br
.ti -1c
.RI "Warning int double int int \fBN2\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define \fBusage\fP   '\\n\\\fBn\fP\\\fBn\fP\\NAME\\\fBn\fP\\	makepeff --- compute effective polarisability\\\fBn\fP\\\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	makepeff [-u]\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	'makepeff' first reads from stdin \fBa\fP catalogue which\\\fBn\fP\\	must contain at least the following entries:\\\fBn\fP\\		F	# windowed flux\\\fBn\fP\\		q0	# size\\\fBn\fP\\		q[2]	# polarisation\\\fBn\fP\\		R[2]	# flux response\\\fBn\fP\\		P0[2]	# size response\\\fBn\fP\\		P[2][2]	# polarisation response\\\fBn\fP\\	as created by 'getshapes2'.\\\fBn\fP\\	It bins appropriate combinations of these in \fBa\fP cubical\\\fBn\fP\\	array in F, p0, q space and computes P_effective.\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser --- kaiser@hawaii.edu\\\fBn\fP\\\\\fBn\fP\\\fBn\fP\\\fBn\fP'"
.PP
Definition at line 1 of file imcattools/photometry/test.c.
.SH "Function Documentation"
.PP 
.SS "float*** alloc3Darray (int N1, int N2, int N3)"
.PP
Referenced by boxavg3D(), grad3D(), and main().
.SS "float*** boxavg3D (float *** f, int N1, int N2, int N3)"
.PP
Referenced by main().
.SS "float*** grad3D (float *** f, int dir, double dx, int N1, int N2, int N3)"
.PP
Referenced by main().
.SS "main (int argc, char * argv[])"
.PP
Definition at line 42 of file imcattools/photometry/test.c.
.PP
References add_comment(), alloc3Darray(), boxavg3D(), buff, error_exit, exit(), fits, FLOAT_PIXTYPE, grad3D(), ipf, MINFLOAT, n, newfitsheader(), usage, writefitscube(), writefitsheader(), and writefitstail().
.SH "Variable Documentation"
.PP 
.SS "Warning \fB__pad0__\fP"
.PP
Definition at line 232 of file imcattools/photometry/test.c.
.SS "Warning int \fBdir\fP"
.PP
Definition at line 232 of file imcattools/photometry/test.c.
.PP
Referenced by grad3D(), and makebreakpoints().
.SS "Warning int double \fBdx\fP"
.PP
Definition at line 232 of file imcattools/photometry/test.c.
.SS "Warning int double int \fBN1\fP"
.PP
Definition at line 232 of file imcattools/photometry/test.c.
.SS "Warning int double int int \fBN2\fP"
.PP
Definition at line 232 of file imcattools/photometry/test.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for imcat from the source code.
