.TH "filters.c" 3 "23 Dec 2003" "imcat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
filters.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <math.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <limits.h>\fP
.br
\fC#include '../utils/error.h'\fP
.br
\fC#include 'filters.h'\fP
.br
\fC#include 'fits.h'\fP
.br
\fC#include '../fftlib/myfft.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBmax\fP(\fBa\fP, \fBb\fP)   ((\fBa\fP) < (\fBb\fP) ? (\fBb\fP) : (\fBa\fP))"
.br
.ti -1c
.RI "#define \fBmin\fP(\fBa\fP, \fBb\fP)   ((\fBa\fP) < (\fBb\fP) ? (\fBa\fP) : (\fBb\fP))"
.br
.ti -1c
.RI "#define \fBZMAX\fP   10"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBgaussian_kernel_filter\fP (float **f, float **fs, int \fBN1\fP, int \fBN2\fP, int \fBm\fP, float rf)"
.br
.ti -1c
.RI "void \fBkernel_filter\fP (float **f, float **fs, int \fBN1\fP, int \fBN2\fP, int \fBm\fP, float(*filterfunc)(int \fBdi\fP, int \fBdj\fP))"
.br
.ti -1c
.RI "void \fBblock_filter\fP (float **f, float **fs, int \fBN1\fP, int \fBN2\fP, int \fBm\fP)"
.br
.ti -1c
.RI "void \fBtukey\fP (float **f, int \fBN1\fP, int \fBN2\fP)"
.br
.ti -1c
.RI "void \fBschecterfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBsigma1\fP, float \fBsigma2\fP, float \fBalpha\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBkolmogorovfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBsigma\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBexponentialfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBsigma\fP, float gamma, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBgaussfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBA\fP, float \fBB\fP, float \fBphi\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBmexicanfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBsigma1\fP, float \fBsigma2\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBpowerlawfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBalpha\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBpowerspectrum\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **P, int **\fBnmodes\fP)"
.br
.ti -1c
.RI "float \fBgaussianfilterfunc\fP (int \fBi\fP, int \fBj\fP)"
.br
.ti -1c
.RI "float \fBschecterfilterfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBkolmogorovfilterfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBexponentialfilterfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBgaussballfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBgaussellipsoidfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBmexicanfilterfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBpowerlawfilterfunction\fP (float ki, float kj)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "float \fBgaussballsigma\fP"
.br
.ti -1c
.RI "float \fBgaussfilterparam\fP"
.br
.ti -1c
.RI "float \fBschectersigma1\fP"
.br
.ti -1c
.RI "float \fBschectersigma2\fP"
.br
.ti -1c
.RI "float \fBschecteralpha\fP"
.br
.ti -1c
.RI "float \fBkolmogorovsigmasquared\fP"
.br
.ti -1c
.RI "float \fBexponentialsigmasquared\fP"
.br
.ti -1c
.RI "float \fBexponentialgamma\fP"
.br
.ti -1c
.RI "float \fBgausssigma11\fP"
.br
.ti -1c
.RI "float \fBgausssigma22\fP"
.br
.ti -1c
.RI "float \fBgausssigma12\fP"
.br
.ti -1c
.RI "float \fBmexicansigma1\fP"
.br
.ti -1c
.RI "float \fBmexicansigma2\fP"
.br
.ti -1c
.RI "float \fBpowerlawalpha\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define max(\fBa\fP, \fBb\fP)   ((\fBa\fP) < (\fBb\fP) ? (\fBb\fP) : (\fBa\fP))"
.PP
\fBfilters.c\fP --- image processing routines Definition at line 15 of file filters.c.
.SS "#define min(\fBa\fP, \fBb\fP)   ((\fBa\fP) < (\fBb\fP) ? (\fBa\fP) : (\fBb\fP))"
.PP
Definition at line 16 of file filters.c.
.SS "#define ZMAX   10"
.PP
Definition at line 430 of file filters.c.
.SH "Function Documentation"
.PP 
.SS "void block_filter (float ** f, float ** fs, int N1, int N2, int m)"
.PP
Definition at line 86 of file filters.c.
.SS "void exponentialfilter (float ** f, int N1, int N2, float ** fs, float sigma, float gamma, float magicsubstitute)"
.PP
Definition at line 250 of file filters.c.
.PP
References alloc_fft(), exponentialfilterfunction(), exponentialgamma, exponentialsigmasquared, f, fft_type, filter(), forward_fft(), free_fft(), i, inverse_fft(), j, N1, N2, sigma, and substitute().
.PP
Referenced by main().
.SS "float exponentialfilterfunction (float ki, float kj)"
.PP
Definition at line 462 of file filters.c.
.PP
References exponentialgamma, exponentialsigmasquared, and kk.
.PP
Referenced by exponentialfilter().
.SS "float gaussballfunction (float ki, float kj)"
.PP
Definition at line 471 of file filters.c.
.PP
Referenced by gaussfilter().
.SS "float gaussellipsoidfunction (float ki, float kj)"
.PP
Definition at line 484 of file filters.c.
.PP
Referenced by gaussfilter().
.SS "void gaussfilter (float ** f, int N1, int N2, float ** fs, float A, float B, float phi, float magicsubstitute)"
.PP
Definition at line 293 of file filters.c.
.SS "void gaussian_kernel_filter (float ** f, float ** fs, int N1, int N2, int m, float rf)"
.PP
Definition at line 28 of file filters.c.
.SS "float gaussianfilterfunc (int i, int j)"
.PP
Definition at line 432 of file filters.c.
.PP
Referenced by gaussian_kernel_filter().
.SS "void kernel_filter (float ** f, float ** fs, int N1, int N2, int m, float(* filterfunc)(int \fBdi\fP, int \fBdj\fP))"
.PP
Definition at line 35 of file filters.c.
.SS "void kolmogorovfilter (float ** f, int N1, int N2, float ** fs, float sigma, float magicsubstitute)"
.PP
Definition at line 206 of file filters.c.
.SS "float kolmogorovfilterfunction (float ki, float kj)"
.PP
Definition at line 454 of file filters.c.
.PP
Referenced by kolmogorovfilter().
.SS "void mexicanfilter (float ** f, int N1, int N2, float ** fs, float sigma1, float sigma2, float magicsubstitute)"
.PP
Definition at line 351 of file filters.c.
.SS "float mexicanfilterfunction (float ki, float kj)"
.PP
Definition at line 498 of file filters.c.
.SS "void powerlawfilter (float ** f, int N1, int N2, float ** fs, float alpha, float magicsubstitute)"
.PP
Definition at line 385 of file filters.c.
.SS "float powerlawfilterfunction (float ki, float kj)"
.PP
Definition at line 508 of file filters.c.
.PP
Referenced by powerlawfilter().
.SS "void powerspectrum (float ** f, int N1, int N2, float ** P, int ** nmodes)"
.PP
2-D power spectrum analysis. f[][] is N2 * N1 array. N must be power of two. P[] and nmodes[] must be allocated by calling function with dimension N / 2.
.PP
Result is P[k] = sum f exp(\fBik.r\fP) averages on rings in k-space. Array nmodes[k] contains the number of modes used in averaging which is needed for uncertainty. Definition at line 417 of file filters.c.
.SS "void schecterfilter (float ** f, int N1, int N2, float ** fs, float sigma1, float sigma2, float alpha, float magicsubstitute)"
.PP
Definition at line 155 of file filters.c.
.SS "float schecterfilterfunction (float ki, float kj)"
.PP
Definition at line 444 of file filters.c.
.PP
Referenced by schecterfilter().
.SS "void tukey (float ** f, int N1, int N2)"
.PP
Definition at line 122 of file filters.c.
.SH "Variable Documentation"
.PP 
.SS "float \fBexponentialgamma\fP\fC [static]\fP"
.PP
Definition at line 23 of file filters.c.
.PP
Referenced by exponentialfilter(), and exponentialfilterfunction().
.SS "float \fBexponentialsigmasquared\fP\fC [static]\fP"
.PP
Definition at line 23 of file filters.c.
.PP
Referenced by exponentialfilter(), and exponentialfilterfunction().
.SS "float \fBgaussballsigma\fP\fC [static]\fP"
.PP
Definition at line 19 of file filters.c.
.PP
Referenced by gaussballfunction(), and gaussfilter().
.SS "float \fBgaussfilterparam\fP\fC [static]\fP"
.PP
Definition at line 20 of file filters.c.
.PP
Referenced by gaussian_kernel_filter(), and gaussianfilterfunc().
.SS "float \fBgausssigma11\fP\fC [static]\fP"
.PP
Definition at line 24 of file filters.c.
.PP
Referenced by gaussellipsoidfunction(), and gaussfilter().
.SS "float \fBgausssigma12\fP\fC [static]\fP"
.PP
Definition at line 24 of file filters.c.
.PP
Referenced by gaussellipsoidfunction(), and gaussfilter().
.SS "float \fBgausssigma22\fP\fC [static]\fP"
.PP
Definition at line 24 of file filters.c.
.PP
Referenced by gaussellipsoidfunction(), and gaussfilter().
.SS "float \fBkolmogorovsigmasquared\fP\fC [static]\fP"
.PP
Definition at line 22 of file filters.c.
.PP
Referenced by kolmogorovfilter(), and kolmogorovfilterfunction().
.SS "float \fBmexicansigma1\fP\fC [static]\fP"
.PP
Definition at line 25 of file filters.c.
.PP
Referenced by mexicanfilter(), and mexicanfilterfunction().
.SS "float \fBmexicansigma2\fP\fC [static]\fP"
.PP
Definition at line 25 of file filters.c.
.PP
Referenced by mexicanfilter(), and mexicanfilterfunction().
.SS "float \fBpowerlawalpha\fP\fC [static]\fP"
.PP
Definition at line 26 of file filters.c.
.PP
Referenced by powerlawfilter(), and powerlawfilterfunction().
.SS "float \fBschecteralpha\fP\fC [static]\fP"
.PP
Definition at line 21 of file filters.c.
.PP
Referenced by schecterfilter(), and schecterfilterfunction().
.SS "float \fBschectersigma1\fP\fC [static]\fP"
.PP
Definition at line 21 of file filters.c.
.PP
Referenced by schecterfilter(), and schecterfilterfunction().
.SS "float \fBschectersigma2\fP\fC [static]\fP"
.PP
Definition at line 21 of file filters.c.
.PP
Referenced by schecterfilter(), and schecterfilterfunction().
.SH "Author"
.PP 
Generated automatically by Doxygen for imcat from the source code.
