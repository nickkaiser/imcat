.TH "kappa2stuff.c" 3 "23 Dec 2003" "imcat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
kappa2stuff.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <math.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <limits.h>\fP
.br
\fC#include '../imlib/fits.h'\fP
.br
\fC#include '../fftlib/myfft.h'\fP
.br
\fC#include '../utils/error.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBusage\fP   '\\n\\\fBn\fP\\\fBn\fP\\NAME\\\fBn\fP\\	kappa2stuff --- generate shear etc from surface density\\\fBn\fP\\\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	kappa2stuff [\fBoptions\fP...] \\\fBn\fP\\		-f \fBNx\fP \fBNy\fP	# set size of fft box\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	\\'kappa2stuff\\' reads \fBa\fP \fBfits\fP file containing \fBa\fP smooth kappa\\\fBn\fP\\	image (perhaps generated by \\'lightmap ... ... | smooth ...\\')\\n\\	and generates \fBa\fP grid of distortion, shear, deflection etc values.\\\fBn\fP\\	By default it does an FFT in \fBa\fP box twice size of original\\\fBn\fP\\	image to remove periodic BC effects.  Use -f option to\\\fBn\fP\\	to set size of FFT (must be bigger than actual image)\\\fBn\fP\\	The output is in 'lc' catalogue format with items:\\\fBn\fP\\		x[2]		# position\\\fBn\fP\\		kappa		# surface density as input\\\fBn\fP\\		def[2]		# deflection\\\fBn\fP\\		lambda[2]	# eigenvalues of distortion tensor\\\fBn\fP\\		\fBe\fP[2]		# distortion\\\fBn\fP\\		R		# axis ratio\\\fBn\fP\\		\fBphi\fP		# position \fBangle\fP\\\fBn\fP\\		parity		# parity\\\fBn\fP\\		amp		# magnification\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser:  kaiser@cita.utoronto.ca\\\fBn\fP\\\\\fBn\fP\\\fBn\fP\\\fBn\fP'"
.br
.ti -1c
.RI "#define \fBPI\fP   M_PI"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "float \fBzero\fP (float kx, float ky)"
.br
.ti -1c
.RI "float \fBdef1\fP (float kx, float ky)"
.br
.ti -1c
.RI "float \fBdef2\fP (float kx, float ky)"
.br
.ti -1c
.RI "float \fBgamma1\fP (float kx, float ky)"
.br
.ti -1c
.RI "float \fBgamma2\fP (float kx, float ky)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define PI   M_PI"
.PP
Definition at line 43 of file kappa2stuff.c.
.SS "#define \fBusage\fP   '\\n\\\fBn\fP\\\fBn\fP\\NAME\\\fBn\fP\\	kappa2stuff --- generate shear etc from surface density\\\fBn\fP\\\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	kappa2stuff [\fBoptions\fP...] \\\fBn\fP\\		-f \fBNx\fP \fBNy\fP	# set size of fft box\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	\\'kappa2stuff\\' reads \fBa\fP \fBfits\fP file containing \fBa\fP smooth kappa\\\fBn\fP\\	image (perhaps generated by \\'lightmap ... ... | smooth ...\\')\\n\\	and generates \fBa\fP grid of distortion, shear, deflection etc values.\\\fBn\fP\\	By default it does an FFT in \fBa\fP box twice size of original\\\fBn\fP\\	image to remove periodic BC effects.  Use -f option to\\\fBn\fP\\	to set size of FFT (must be bigger than actual image)\\\fBn\fP\\	The output is in 'lc' catalogue format with items:\\\fBn\fP\\		x[2]		# position\\\fBn\fP\\		kappa		# surface density as input\\\fBn\fP\\		def[2]		# deflection\\\fBn\fP\\		lambda[2]	# eigenvalues of distortion tensor\\\fBn\fP\\		\fBe\fP[2]		# distortion\\\fBn\fP\\		R		# axis ratio\\\fBn\fP\\		\fBphi\fP		# position \fBangle\fP\\\fBn\fP\\		parity		# parity\\\fBn\fP\\		amp		# magnification\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser:  kaiser@cita.utoronto.ca\\\fBn\fP\\\\\fBn\fP\\\fBn\fP\\\fBn\fP'"
.PP
Definition at line 1 of file kappa2stuff.c.
.SH "Function Documentation"
.PP 
.SS "float def1 (float kx, float ky)"
.PP
Definition at line 167 of file kappa2stuff.c.
.PP
References kk.
.PP
Referenced by main().
.SS "float def2 (float kx, float ky)"
.PP
Definition at line 179 of file kappa2stuff.c.
.PP
References kk.
.PP
Referenced by main().
.SS "float gamma1 (float kx, float ky)"
.PP
Definition at line 190 of file kappa2stuff.c.
.PP
References kk.
.PP
Referenced by main().
.SS "float gamma2 (float kx, float ky)"
.PP
Definition at line 201 of file kappa2stuff.c.
.PP
References kk.
.PP
Referenced by main().
.SS "int main (int argc, char * argv[])"
.PP
Definition at line 52 of file kappa2stuff.c.
.PP
References alloc_fft(), allocFloatArray(), cfilter(), d, def1(), def2(), error_exit, exit(), fft_type, filter(), fits, forward_fft(), g(), gamma1(), gamma2(), i, inverse_fft(), j, lcpipe, mag, N1, N2, Nx, Ny, phi, read2Dfloatimage(), usage, and zero().
.SS "float zero (float kx, float ky)"
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for imcat from the source code.
