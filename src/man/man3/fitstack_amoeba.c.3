.TH "fitstack_amoeba.c" 3 "23 Dec 2003" "imcat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fitstack_amoeba.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <math.h>\fP
.br
\fC#include 'fitstack.h'\fP
.br
\fC#include 'fitstack_modefunc.h'\fP
.br
\fC#include 'fitstack_read.h'\fP
.br
\fC#include 'amoeba_dbl.h'\fP
.br
\fC#include 'amotry_dbl.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBusage\fP   '\\n\\NAME\\\fBn\fP\\	fitstack --- \fBfit\fP for transformation coefficients for \fBa\fP set of exposures\\\fBn\fP\\\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	fitstack \fBnexp\fP [\fBoptions\fP....]\\\fBn\fP\\		-\fBl\fP \fBlmin\fP \fBlmax\fP	# min and max \fBorder\fP for distortion polynomials\\\fBn\fP\\		-\fBt\fP ftol		# fractional tolerance (1.\fBe\fP-10)\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	'fitstack' reads from stdin \fBa\fP catalogue containing the result of\\\fBn\fP\\	merging all pairs of cats for \fBa\fP \fBstack\fP of '\fBnexp\fP' images (as created\\\fBn\fP\\	by 'mergestacks1' or 'mergestacks2') and which must contain entries for\\\fBn\fP\\	spatial coords 'x[2][2]', magnitude '\fBmag\fP[2]' and exposure \fBnumber\fP 'exp[2]'.\\\fBn\fP\\	It then \fBfits\fP \fBa\fP model in which sky coords (in \fBframe\fP defined by exposure-0) are\\\fBn\fP\\		\fBr\fP = r_e + dphi_e r_e + d_e\\\fBn\fP\\	where the 2\fBx2\fP matrix dphi allows for rotations between\\\fBn\fP\\	exposures and possibly atmospheric refraction, and we set\\\fBn\fP\\	dphi = \fBd\fP = 0 for the 0th exposure.\\\fBn\fP\\	It will also optionally then \fBfit\fP for distortion of telescope\\\fBn\fP\\	using \fBa\fP model in which sky coords \fBr\fP are related to detector coords x by\\\fBn\fP\\		r_e = x_e + sum a_m f_m(x_e)\\\fBn\fP\\	where \fBm\fP labels the modes, and where each \fBmode\fP coefficient a_m\\\fBn\fP\\	is \fBa\fP 2-vector and the modes are polynomials\\\fBn\fP\\	of \fBorder\fP '\fBlmin\fP' through '\fBlmax\fP'. 	For \fBlmin\fP = 2, \fBlmax\fP = 4 say, the modes are:\\\fBn\fP\\		x^2, xy, y^2, x^3, x^2 y, x y^2, y^3,\\\fBn\fP\\		x^4, x^3 y, x^2 y^2, x y^3, y^4.\\\fBn\fP\\	We also read magnitudes, which we model as:\\\fBn\fP\\		m_e = \fBm\fP + M_e\\\fBn\fP\\	where \fBm\fP is the true magnitude and M_e is the magnitude\\\fBn\fP\\	offset the \fBe\fP'th exposure (relative to exp-0).\\\fBn\fP\\	See also fitstack.tex.\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser --- kaiser@cita.utoronto.ca\\\fBn\fP\\\\\fBn\fP'"
.br
.ti -1c
.RI "#define \fBSCALE\fP   1.0"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBmain\fP (int argc, char *argv[])"
.br
.ti -1c
.RI "int \fBmake_r\fP (void)"
.br
.ti -1c
.RI "int \fBallocatearrays\fP (void)"
.br
.ti -1c
.RI "double *** \fBallocpositionvector\fP (void)"
.br
.ti -1c
.RI "int \fBprinttranslations\fP (void)"
.br
.ti -1c
.RI "int \fBprintdistortions\fP (void)"
.br
.ti -1c
.RI "double \fBchisquared\fP (double *\fBv\fP)"
.br
.ti -1c
.RI "int \fBoutputrcat\fP (void)"
.br
.ti -1c
.RI "int \fBfittranslations\fP (void)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "double *** \fBx\fP"
.br
.ti -1c
.RI "double ** \fBmag\fP"
.br
.ti -1c
.RI "double *** \fBr\fP = NULL ***\fBre\fP"
.br
.ti -1c
.RI "int ** \fBe\fP"
.br
.ti -1c
.RI "int \fBnprs\fP"
.br
.ti -1c
.RI "int \fBnexp\fP"
.br
.ti -1c
.RI "int \fBnmodes\fP"
.br
.ti -1c
.RI "int \fBncoefft\fP"
.br
.ti -1c
.RI "int \fBlmin\fP"
.br
.ti -1c
.RI "int \fBlmax\fP"
.br
.ti -1c
.RI "int * \fBll\fP"
.br
.ti -1c
.RI "int * \fBmm\fP"
.br
.ti -1c
.RI "int \fBdodistfit\fP"
.br
.ti -1c
.RI "double * \fBd\fP [2]"
.br
.ti -1c
.RI "double * \fBphi\fP [2][2]"
.br
.ti -1c
.RI "double * \fBa\fP [2]"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define SCALE   1.0"
.PP
Definition at line 53 of file fitstack_amoeba.c.
.SS "#define \fBusage\fP   '\\n\\NAME\\\fBn\fP\\	fitstack --- \fBfit\fP for transformation coefficients for \fBa\fP set of exposures\\\fBn\fP\\\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	fitstack \fBnexp\fP [\fBoptions\fP....]\\\fBn\fP\\		-\fBl\fP \fBlmin\fP \fBlmax\fP	# min and max \fBorder\fP for distortion polynomials\\\fBn\fP\\		-\fBt\fP ftol		# fractional tolerance (1.\fBe\fP-10)\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	'fitstack' reads from stdin \fBa\fP catalogue containing the result of\\\fBn\fP\\	merging all pairs of cats for \fBa\fP \fBstack\fP of '\fBnexp\fP' images (as created\\\fBn\fP\\	by 'mergestacks1' or 'mergestacks2') and which must contain entries for\\\fBn\fP\\	spatial coords 'x[2][2]', magnitude '\fBmag\fP[2]' and exposure \fBnumber\fP 'exp[2]'.\\\fBn\fP\\	It then \fBfits\fP \fBa\fP model in which sky coords (in \fBframe\fP defined by exposure-0) are\\\fBn\fP\\		\fBr\fP = r_e + dphi_e r_e + d_e\\\fBn\fP\\	where the 2\fBx2\fP matrix dphi allows for rotations between\\\fBn\fP\\	exposures and possibly atmospheric refraction, and we set\\\fBn\fP\\	dphi = \fBd\fP = 0 for the 0th exposure.\\\fBn\fP\\	It will also optionally then \fBfit\fP for distortion of telescope\\\fBn\fP\\	using \fBa\fP model in which sky coords \fBr\fP are related to detector coords x by\\\fBn\fP\\		r_e = x_e + sum a_m f_m(x_e)\\\fBn\fP\\	where \fBm\fP labels the modes, and where each \fBmode\fP coefficient a_m\\\fBn\fP\\	is \fBa\fP 2-vector and the modes are polynomials\\\fBn\fP\\	of \fBorder\fP '\fBlmin\fP' through '\fBlmax\fP'. 	For \fBlmin\fP = 2, \fBlmax\fP = 4 say, the modes are:\\\fBn\fP\\		x^2, xy, y^2, x^3, x^2 y, x y^2, y^3,\\\fBn\fP\\		x^4, x^3 y, x^2 y^2, x y^3, y^4.\\\fBn\fP\\	We also read magnitudes, which we model as:\\\fBn\fP\\		m_e = \fBm\fP + M_e\\\fBn\fP\\	where \fBm\fP is the true magnitude and M_e is the magnitude\\\fBn\fP\\	offset the \fBe\fP'th exposure (relative to exp-0).\\\fBn\fP\\	See also fitstack.tex.\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser --- kaiser@cita.utoronto.ca\\\fBn\fP\\\\\fBn\fP'"
.PP
Definition at line 6 of file fitstack_amoeba.c.
.SH "Function Documentation"
.PP 
.SS "int allocatearrays (void)"
.PP
Definition at line 229 of file fitstack_amoeba.c.
.PP
References a, Ad, Am, At, Bd, Bm, Bt, Cd, Cm, Ct, d, dm, dodistfit, i, indxd, indxm, indxt, j, m, ndcoefft, nexp, nmcoefft, nmodes, ntcoefft, and phi.
.SS "double*** allocpositionvector (void)"
.PP
Definition at line 247 of file fitstack_amoeba.c.
.PP
References allocpositionvector(), error_exit, i, j, n, and nprs.
.SS "double chisquared (double * v)"
.PP
Definition at line 289 of file fitstack_amoeba.c.
.SS "int fittranslations (void)"
.PP
Definition at line 336 of file fitstack_amoeba.c.
.PP
References At, Bt, Ct, d, det, e, i, indxt, j, m, mylubksb(), myludcmp(), n, ne, nexp, nprs, ntcoefft, phi, and re.
.SS "main (int argc, char * argv[])"
.PP
Definition at line 66 of file fitstack_amoeba.c.
.PP
References chisquared(), d, and n.
.SS "int make_r (void)"
.PP
Definition at line 195 of file fitstack_amoeba.c.
.PP
References a, allocpositionvector(), d, e, f(), i, j, ll, M, mm, n, nmodes, nprs, phi, r, x, and xx.
.SS "int outputrcat (void)"
.PP
Definition at line 320 of file fitstack_amoeba.c.
.PP
References C, n, N, w, and x.
.SS "int printdistortions (void)"
.PP
Definition at line 279 of file fitstack_amoeba.c.
.PP
References d, and n.
.SS "int printtranslations (void)"
.PP
Definition at line 268 of file fitstack_amoeba.c.
.PP
References n.
.SH "Variable Documentation"
.PP 
.SS "double* \fBa\fP[2]\fC [static]\fP"
.PP
Definition at line 64 of file fitstack_amoeba.c.
.SS "double* \fBd\fP[2]\fC [static]\fP"
.PP
Definition at line 62 of file fitstack_amoeba.c.
.SS "int \fBdodistfit\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "int** \fBe\fP"
.PP
Definition at line 57 of file fitstack_amoeba.c.
.SS "int * \fBll\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "int \fBlmax\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "int \fBlmin\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "double ** \fBmag\fP"
.PP
Definition at line 56 of file fitstack_amoeba.c.
.SS "int * \fBmm\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "int \fBncoefft\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "int \fBnexp\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "int \fBnmodes\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "int \fBnprs\fP\fC [static]\fP"
.PP
Definition at line 60 of file fitstack_amoeba.c.
.SS "double * \fBphi\fP[2][2]\fC [static]\fP"
.PP
Definition at line 62 of file fitstack_amoeba.c.
.SS "double *** \fBr\fP = NULL ***\fBre\fP"
.PP
Definition at line 56 of file fitstack_amoeba.c.
.SS "double*** x"
.PP
Definition at line 56 of file fitstack_amoeba.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for imcat from the source code.
