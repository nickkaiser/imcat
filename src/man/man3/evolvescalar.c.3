.TH "evolvescalar.c" 3 "23 Dec 2003" "imcat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
evolvescalar.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <math.h>\fP
.br
\fC#include 'utils/args.h'\fP
.br
\fC#include 'utils/arrays.h'\fP
.br
\fC#include 'imlib/fits.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBNSTEPS\fP   10"
.br
.ti -1c
.RI "#define \fBKSTAR\fP   0.3"
.br
.ti -1c
.RI "#define \fBDT\fP   0.2"
.br
.ti -1c
.RI "#define \fBLAMBDA\fP   0.0"
.br
.ti -1c
.RI "#define \fBGAMMA\fP   0.0"
.br
.ti -1c
.RI "#define \fBswap\fP(\fBa\fP, \fBb\fP)   \fBtmp\fP=(\fBa\fP);(\fBb\fP)=(\fBa\fP);(\fBa\fP)=\fBtmp\fP"
.br
.ti -1c
.RI "#define \fBMAX_FRAMES\fP   99999"
.br
.ti -1c
.RI "#define \fBUSAGE\fP   '\\nNAME\\\fBn\fP\\	evolvescalar - evolve \fBa\fP 2-D scalar field\\\fBn\fP\\\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	evolvescalar [-nsteps nsteps (10)] [-\fBnframes\fP \fBnframes\fP (99999)]\\\fBn\fP\\		[-\fBkstar\fP \fBkstar\fP (0.3)] [-autoscale] [-dt dt (0.2)]\\\fBn\fP\\		[-lambda lambda (0.0)] [-gamma gamma (0.0)] [-u]\\\fBn\fP\\		[-gravity V0 \fBsigma\fP]\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	Evolvescalar reads from stdin \fBa\fP 3-D \fBFITS\fP file f[2][\fBNy\fP][\fBNx\fP] consisting\\\fBn\fP\\	of 2 planes containing the initial field \fBd\fP[\fBNy\fP][\fBNx\fP] and the initial\\\fBn\fP\\	field velocity \fBv\fP[\fBNy\fP][\fBNx\fP].\\\fBn\fP\\	It then evolves the coupled equations\\\fBn\fP\\		dv/dt = laplacian(\fBd\fP) - \fBkstar\fP^2 \fBd\fP - 4 lambda \fBd\fP^3 - gamma \fBv\fP\\\fBn\fP\\		dd/dt = \fBv\fP\\\fBn\fP\\	With gamma = 0 these are equivalent to the Klein-Gordon equation\\\fBn\fP\\	with mass ~ \fBkstar\fP and \fBa\fP lambda \fBphi\fP^4 self-interaction.\\\fBn\fP\\\\\fBn\fP\\	With -gravity option we replace \fBkstar\fP by\\\fBn\fP\\	\fBkstar\fP (1 - V0 exp(-0.5 \fBr\fP**2 / \fBsigma\fP**2)).  This simulates the effect of\\\fBn\fP\\	\fBa\fP fixed external gravitational potential.\\\fBn\fP\\\\\fBn\fP\\	With non-zero damping coefficient gamma, the waves evolve as\\\fBn\fP\\	in an expanding universe with H = gamma / 3.\\\fBn\fP\\\\\fBn\fP\\	If \fBkstar\fP is negative, it evolves\\\fBn\fP\\		dv/dt = laplacian(\fBd\fP) + \fBkstar\fP^2 \fBd\fP - 4 lambda \fBd\fP^3 - gamma \fBv\fP\\\fBn\fP\\		dd/dt = \fBv\fP\\\fBn\fP\\\\\fBn\fP\\	which has \fBa\fP negative mass term and gives \fBa\fP '\fBw\fP'-shaped potential.\\\fBn\fP\\\\\fBn\fP\\	The laplacian function is computed as\\\fBn\fP\\\\\fBn\fP\\	laplacian = \fBd\fP[y][x-1] + \fBd\fP[y][x+1] + \fBd\fP[y-1][x] + \fBd\fP[y+1][x] - 4 * \fBd\fP[y][x].\\\fBn\fP\\\\\fBn\fP\\	The evolution scheme is\\\fBn\fP\\		\fBv\fP += 0.5 * dv/dt * dt\\\fBn\fP\\		\fBd\fP += dd/dt * dt\\\fBn\fP\\		\fBv\fP += 0.5 * dv/dt * dt\\\fBn\fP\\\\\fBn\fP\\	It outputs \fBa\fP 3-D \fBFITS\fP file f[\fBnframes\fP][\fBNy\fP][\fBNx\fP] containing the\\\fBn\fP\\	evolved field.\\\fBn\fP\\\\\fBn\fP\\OPTIONS\\\fBn\fP\\		-nsteps nsteps		# \fBnumber\fP of steps between output frames\\\fBn\fP\\		-\fBnframes\fP \fBnframes\fP	# total \fBnumber\fP of output frames\\\fBn\fP\\		-\fBkstar\fP \fBkstar\fP		# Compton wave-\fBnumber\fP\\\fBn\fP\\		-autoscale		# scale each output \fBframe\fP to 0-256\\\fBn\fP\\		-dt dt			# time-step\\\fBn\fP\\		-lambda lambda		# interaction strength\\\fBn\fP\\		-gamma gamma		# damping rate\\\fBn\fP\\		-u			# print man-page\\\fBn\fP\\\\\fBn\fP\\SEE ALSO\\\fBn\fP\\	edw, generate_dw\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser --- kaiser@hawaii.edu\\\fBn\fP\\\fBn\fP'"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBoutputframe\fP (float **\fBd\fP, float **dout, int \fBNx\fP, int \fBNy\fP, int autoscale, int \fBi\fP)"
.br
.ti -1c
.RI "\fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBfitsheader\fP * \fBfits\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define DT   0.2"
.PP
Definition at line 13 of file evolvescalar.c.
.PP
Referenced by main().
.SS "#define GAMMA   0.0"
.PP
Definition at line 15 of file evolvescalar.c.
.PP
Referenced by main().
.SS "#define KSTAR   0.3"
.PP
Definition at line 12 of file evolvescalar.c.
.PP
Referenced by main().
.SS "#define LAMBDA   0.0"
.PP
Definition at line 14 of file evolvescalar.c.
.SS "#define MAX_FRAMES   99999"
.PP
Definition at line 18 of file evolvescalar.c.
.SS "#define NSTEPS   10"
.PP
Definition at line 11 of file evolvescalar.c.
.PP
Referenced by main().
.SS "#define swap(\fBa\fP, \fBb\fP)   \fBtmp\fP=(\fBa\fP);(\fBb\fP)=(\fBa\fP);(\fBa\fP)=\fBtmp\fP"
.PP
Definition at line 17 of file evolvescalar.c.
.PP
Referenced by amoeba().
.SS "#define USAGE   '\\nNAME\\\fBn\fP\\	evolvescalar - evolve \fBa\fP 2-D scalar field\\\fBn\fP\\\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	evolvescalar [-nsteps nsteps (10)] [-\fBnframes\fP \fBnframes\fP (99999)]\\\fBn\fP\\		[-\fBkstar\fP \fBkstar\fP (0.3)] [-autoscale] [-dt dt (0.2)]\\\fBn\fP\\		[-lambda lambda (0.0)] [-gamma gamma (0.0)] [-u]\\\fBn\fP\\		[-gravity V0 \fBsigma\fP]\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	Evolvescalar reads from stdin \fBa\fP 3-D \fBFITS\fP file f[2][\fBNy\fP][\fBNx\fP] consisting\\\fBn\fP\\	of 2 planes containing the initial field \fBd\fP[\fBNy\fP][\fBNx\fP] and the initial\\\fBn\fP\\	field velocity \fBv\fP[\fBNy\fP][\fBNx\fP].\\\fBn\fP\\	It then evolves the coupled equations\\\fBn\fP\\		dv/dt = laplacian(\fBd\fP) - \fBkstar\fP^2 \fBd\fP - 4 lambda \fBd\fP^3 - gamma \fBv\fP\\\fBn\fP\\		dd/dt = \fBv\fP\\\fBn\fP\\	With gamma = 0 these are equivalent to the Klein-Gordon equation\\\fBn\fP\\	with mass ~ \fBkstar\fP and \fBa\fP lambda \fBphi\fP^4 self-interaction.\\\fBn\fP\\\\\fBn\fP\\	With -gravity option we replace \fBkstar\fP by\\\fBn\fP\\	\fBkstar\fP (1 - V0 exp(-0.5 \fBr\fP**2 / \fBsigma\fP**2)).  This simulates the effect of\\\fBn\fP\\	\fBa\fP fixed external gravitational potential.\\\fBn\fP\\\\\fBn\fP\\	With non-zero damping coefficient gamma, the waves evolve as\\\fBn\fP\\	in an expanding universe with H = gamma / 3.\\\fBn\fP\\\\\fBn\fP\\	If \fBkstar\fP is negative, it evolves\\\fBn\fP\\		dv/dt = laplacian(\fBd\fP) + \fBkstar\fP^2 \fBd\fP - 4 lambda \fBd\fP^3 - gamma \fBv\fP\\\fBn\fP\\		dd/dt = \fBv\fP\\\fBn\fP\\\\\fBn\fP\\	which has \fBa\fP negative mass term and gives \fBa\fP '\fBw\fP'-shaped potential.\\\fBn\fP\\\\\fBn\fP\\	The laplacian function is computed as\\\fBn\fP\\\\\fBn\fP\\	laplacian = \fBd\fP[y][x-1] + \fBd\fP[y][x+1] + \fBd\fP[y-1][x] + \fBd\fP[y+1][x] - 4 * \fBd\fP[y][x].\\\fBn\fP\\\\\fBn\fP\\	The evolution scheme is\\\fBn\fP\\		\fBv\fP += 0.5 * dv/dt * dt\\\fBn\fP\\		\fBd\fP += dd/dt * dt\\\fBn\fP\\		\fBv\fP += 0.5 * dv/dt * dt\\\fBn\fP\\\\\fBn\fP\\	It outputs \fBa\fP 3-D \fBFITS\fP file f[\fBnframes\fP][\fBNy\fP][\fBNx\fP] containing the\\\fBn\fP\\	evolved field.\\\fBn\fP\\\\\fBn\fP\\OPTIONS\\\fBn\fP\\		-nsteps nsteps		# \fBnumber\fP of steps between output frames\\\fBn\fP\\		-\fBnframes\fP \fBnframes\fP	# total \fBnumber\fP of output frames\\\fBn\fP\\		-\fBkstar\fP \fBkstar\fP		# Compton wave-\fBnumber\fP\\\fBn\fP\\		-autoscale		# scale each output \fBframe\fP to 0-256\\\fBn\fP\\		-dt dt			# time-step\\\fBn\fP\\		-lambda lambda		# interaction strength\\\fBn\fP\\		-gamma gamma		# damping rate\\\fBn\fP\\		-u			# print man-page\\\fBn\fP\\\\\fBn\fP\\SEE ALSO\\\fBn\fP\\	edw, generate_dw\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser --- kaiser@hawaii.edu\\\fBn\fP\\\fBn\fP'"
.PP
Definition at line 20 of file evolvescalar.c.
.SH "Function Documentation"
.PP 
.SS "main (int argc, char * argv[])"
.PP
Definition at line 85 of file evolvescalar.c.
.PP
References add_comment(), allocFloatArray(), argsinit(), d, DT, dx, error_exit, exit(), f, fits, flag, GAMMA, getargd(), getargi(), getflag(), i, KSTAR, kstar, LAMBDA, MAX_FRAMES, fitsheader::n, fitsheader::ndim, nframes, NSTEPS, Nx, Ny, outputframe(), readfitsheader(), readfitsplane(), sigma, USAGE, v, writefitsheader(), writefitstail(), x, xp(), y, and yp().
.SS "void outputframe (float ** d, float ** dout, int Nx, int Ny, int autoscale, int i)"
.PP
Definition at line 221 of file evolvescalar.c.
.PP
References d, dmax, dmin, fits, i, Nx, Ny, writefitsplane(), x, and y.
.PP
Referenced by main().
.SH "Variable Documentation"
.PP 
.SS "\fBfitsheader\fP* \fBfits\fP\fC [static]\fP"
.PP
Definition at line 81 of file evolvescalar.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for imcat from the source code.
