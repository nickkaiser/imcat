.TH "findpeaks.c" 3 "23 Dec 2003" "imcat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
findpeaks.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio.h>\fP
.br
\fC#include <math.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <limits.h>\fP
.br
\fC#include '../../imlib/fits.h'\fP
.br
\fC#include '../../utils/error.h'\fP
.br
\fC#include '../../imlib/filters.h'\fP
.br
\fC#include '../../utils/arrays.h'\fP
.br
\fC#include '../../utils/stats_stuff.h'\fP
.br
\fC#include '../../utils/iostream.h'\fP
.br
\fC#include '../../catlib/cat.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBusage\fP   '\\n\\\fBn\fP\\\fBn\fP\\NAME\\\fBn\fP\\	findpeaks --- simple \fBobject\fP finder\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	findpeaks fitsimage [option...] >catalogue \\\fBn\fP\\		-\fBr\fP	\fBsigma\fP	# gaussian filter \fBradius\fP (default = 2)\\\fBn\fP\\		-\fBn\fP 	nu	# threshold (default = 3)\\\fBn\fP\\		-\fBe\fP		# find all extrema\\\fBn\fP\\		-\fBm\fP		# find all minima\\\fBn\fP\\		-s \fBsigma\fP \fBmode\fP	# sky statistics\\\fBn\fP\\		-\fBd\fP 		# add 2nd derivative information\\\fBn\fP\\		-o		# output \fBFITS\fP file followed by catalog\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	\\'findpeaks\\' fft gaussian filters image and finds peaks above \fBa\fP threshold nu.\\\fBn\fP\\	Creates \fBa\fP catalogue with limited information\\\fBn\fP\\	With -\fBe\fP or -\fBm\fP option, nu parameter ignored.\\\fBn\fP\\	The position 'x' is measured relative to the bottom left\\\fBn\fP\\	corner of the bottom left \fBpixel\fP (so \fBe\fP.g. \fBa\fP single 'hot' \fBpixel\fP\\\fBn\fP\\	at (\fBix\fP,\fBiy\fP) = (23,67), would generate an \fBobject\fP with x = (23.5, 67.5)\\\fBn\fP\\\\\fBn\fP\\	Use -\fBr\fP option to control the smoothing \fBradius\fP.  With negative\\\fBn\fP\\	\fBsigma\fP we don'\fBt\fP smooth at all.\\\fBn\fP\\\\\fBn\fP\\	'findpeaks outputs\\\fBn\fP\\		x[2]		# \fBpeak\fP position\\\fBn\fP\\		fs		# smoothed image value at the \fBpeak\fP\\\fBn\fP\\		nu		# significance value\\\fBn\fP\\		maximum		# true if extremum is \fBa\fP maximum\\\fBn\fP\\\\\fBn\fP\\	and with '-\fBd\fP' option it also outputs\\\fBn\fP\\		ddfs[2][2]	# discretized 2nd derivative at \fBpeak\fP\\\fBn\fP\\		detddfs		# determinant\\\fBn\fP\\\\\fBn\fP\\	'findpeaks' uses \fBiostream\fP library.\\\fBn\fP\\\\\fBn\fP\\	With -o option we send the source image to stdout (but without\\\fBn\fP\\	the tail) followed by the catalog.\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser --- kaiser@cita.utoronto.ca\\\fBn\fP\\\\\fBn\fP\\\fBn\fP\\\fBn\fP'"
.br
.ti -1c
.RI "#define \fBDEFAULT_NU\fP   3"
.br
.ti -1c
.RI "#define \fBDEFAULT_RF\fP   2"
.br
.ti -1c
.RI "#define \fBFINDPEAKS\fP   0"
.br
.ti -1c
.RI "#define \fBFINDEXTREMA\fP   1"
.br
.ti -1c
.RI "#define \fBFINDMINIMA\fP   2"
.br
.ti -1c
.RI "#define \fBMAGIC\fP   FLOAT_MAGIC"
.br
.ti -1c
.RI "#define \fBPI\fP   M_PI"
.br
.ti -1c
.RI "#define \fBTINY\fP   1.\fBe\fP-20"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define DEFAULT_NU   3"
.PP
Definition at line 58 of file findpeaks.c.
.PP
Referenced by main().
.SS "#define DEFAULT_RF   2"
.PP
Definition at line 59 of file findpeaks.c.
.PP
Referenced by main().
.SS "#define FINDEXTREMA   1"
.PP
Definition at line 62 of file findpeaks.c.
.PP
Referenced by main().
.SS "#define FINDMINIMA   2"
.PP
Definition at line 63 of file findpeaks.c.
.PP
Referenced by main().
.SS "#define FINDPEAKS   0"
.PP
Definition at line 61 of file findpeaks.c.
.PP
Referenced by main().
.SS "#define MAGIC   FLOAT_MAGIC"
.PP
Definition at line 65 of file findpeaks.c.
.SS "#define PI   M_PI"
.PP
Definition at line 67 of file findpeaks.c.
.SS "#define TINY   1.\fBe\fP-20"
.PP
Definition at line 69 of file findpeaks.c.
.SS "#define \fBusage\fP   '\\n\\\fBn\fP\\\fBn\fP\\NAME\\\fBn\fP\\	findpeaks --- simple \fBobject\fP finder\\\fBn\fP\\SYNOPSIS\\\fBn\fP\\	findpeaks fitsimage [option...] >catalogue \\\fBn\fP\\		-\fBr\fP	\fBsigma\fP	# gaussian filter \fBradius\fP (default = 2)\\\fBn\fP\\		-\fBn\fP 	nu	# threshold (default = 3)\\\fBn\fP\\		-\fBe\fP		# find all extrema\\\fBn\fP\\		-\fBm\fP		# find all minima\\\fBn\fP\\		-s \fBsigma\fP \fBmode\fP	# sky statistics\\\fBn\fP\\		-\fBd\fP 		# add 2nd derivative information\\\fBn\fP\\		-o		# output \fBFITS\fP file followed by catalog\\\fBn\fP\\\\\fBn\fP\\DESCRIPTION\\\fBn\fP\\	\\'findpeaks\\' fft gaussian filters image and finds peaks above \fBa\fP threshold nu.\\\fBn\fP\\	Creates \fBa\fP catalogue with limited information\\\fBn\fP\\	With -\fBe\fP or -\fBm\fP option, nu parameter ignored.\\\fBn\fP\\	The position 'x' is measured relative to the bottom left\\\fBn\fP\\	corner of the bottom left \fBpixel\fP (so \fBe\fP.g. \fBa\fP single 'hot' \fBpixel\fP\\\fBn\fP\\	at (\fBix\fP,\fBiy\fP) = (23,67), would generate an \fBobject\fP with x = (23.5, 67.5)\\\fBn\fP\\\\\fBn\fP\\	Use -\fBr\fP option to control the smoothing \fBradius\fP.  With negative\\\fBn\fP\\	\fBsigma\fP we don'\fBt\fP smooth at all.\\\fBn\fP\\\\\fBn\fP\\	'findpeaks outputs\\\fBn\fP\\		x[2]		# \fBpeak\fP position\\\fBn\fP\\		fs		# smoothed image value at the \fBpeak\fP\\\fBn\fP\\		nu		# significance value\\\fBn\fP\\		maximum		# true if extremum is \fBa\fP maximum\\\fBn\fP\\\\\fBn\fP\\	and with '-\fBd\fP' option it also outputs\\\fBn\fP\\		ddfs[2][2]	# discretized 2nd derivative at \fBpeak\fP\\\fBn\fP\\		detddfs		# determinant\\\fBn\fP\\\\\fBn\fP\\	'findpeaks' uses \fBiostream\fP library.\\\fBn\fP\\\\\fBn\fP\\	With -o option we send the source image to stdout (but without\\\fBn\fP\\	the tail) followed by the catalog.\\\fBn\fP\\\\\fBn\fP\\AUTHOR\\\fBn\fP\\	Nick Kaiser --- kaiser@cita.utoronto.ca\\\fBn\fP\\\\\fBn\fP\\\fBn\fP\\\fBn\fP'"
.PP
Definition at line 1 of file findpeaks.c.
.SH "Function Documentation"
.PP 
.SS "main (int argc, char * argv[])"
.PP
Definition at line 71 of file findpeaks.c.
.PP
References add_comment(), addargscomment(), allocFloatArray(), BINARY_FILE_TYPE, connectcatheadtoobject(), DEFAULT_NU, DEFAULT_RF, error_exit, exit(), iostream::f, f, fdo_stats(), FILE_IOSTREAM_TYPE, FINDEXTREMA, FINDMINIMA, FINDPEAKS, fits, fstatsrec::fmode, gaussfilter(), getobjectitemindex(), i, j, lcpipe, MAGIC, n, N1, N2, newobject(), openiostream(), PI, read2Dfloatimage(), readcathead(), setaddress(), setcatipf(), setcatopfiletype(), fstatsrec::sigma, TINY, iostream::type, usage, writecathead(), writefitsheader(), writefitsplane(), and writeobject().
.SH "Author"
.PP 
Generated automatically by Doxygen for imcat from the source code.
