.TH "oldfilters.h" 3 "23 Dec 2003" "imcat" \" -*- nroff -*-
.ad l
.nh
.SH NAME
oldfilters.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBPI\fP   M_PI"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBgaussian_kernel_filter\fP (short **f, short **fs, int \fBN1\fP, int \fBN2\fP, int \fBm\fP, float rf)"
.br
.ti -1c
.RI "void \fBkernel_filter\fP (short **f, short **fs, int \fBN1\fP, int \fBN2\fP, int \fBm\fP, float(*filterfunc)(int \fBdi\fP, int \fBdj\fP))"
.br
.ti -1c
.RI "void \fBblock_filter\fP (short **f, short **fs, int \fBN1\fP, int \fBN2\fP, int \fBm\fP)"
.br
.ti -1c
.RI "void \fBtukey\fP (short **f, int \fBN1\fP, int \fBN2\fP)"
.br
.ti -1c
.RI "void \fBschecterfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBsigma1\fP, float \fBsigma2\fP, float \fBalpha\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBkolmogorovfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBsigma\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBgaussfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBA\fP, float \fBB\fP, float \fBphi\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBmexicanfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBsigma1\fP, float \fBsigma2\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBpowerlawfilter\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **fs, float \fBalpha\fP, float magicsubstitute)"
.br
.ti -1c
.RI "void \fBacf\fP (short **f, int \fBN1\fP, int \fBN2\fP, short **theacf, short magicsubstitute)"
.br
.ti -1c
.RI "void \fBpowerspectrum\fP (float **f, int \fBN1\fP, int \fBN2\fP, float **P, int **\fBnmodes\fP)"
.br
.ti -1c
.RI "float \fBgaussianfilterfunc\fP (int \fBi\fP, int \fBj\fP)"
.br
.ti -1c
.RI "float \fBschecterfilterfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBkolmogorovfilterfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBgaussballfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBgaussellipsoidfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBmexicanfilterfunction\fP (float ki, float kj)"
.br
.ti -1c
.RI "float \fBpowerlawfilterfunction\fP (float ki, float kj)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define PI   M_PI"
.PP
Definition at line 47 of file oldfilters.h.
.SH "Function Documentation"
.PP 
.SS "void acf (short ** f, int N1, int N2, short ** theacf, short magicsubstitute)"
.PP
.SS "void block_filter (short ** f, short ** fs, int N1, int N2, int m)"
.PP
Definition at line 85 of file oldfilters.c.
.PP
References error_exit, f, i, j, m, N1, N2, and SHORT_MAGIC.
.PP
Referenced by main().
.SS "float gaussballfunction (float ki, float kj)"
.PP
Definition at line 471 of file filters.c.
.PP
References gaussballsigma, z, and ZMAX.
.SS "float gaussellipsoidfunction (float ki, float kj)"
.PP
Definition at line 484 of file filters.c.
.PP
References gausssigma11, gausssigma12, gausssigma22, z, and ZMAX.
.SS "void gaussfilter (float ** f, int N1, int N2, float ** fs, float A, float B, float phi, float magicsubstitute)"
.PP
Definition at line 293 of file filters.c.
.PP
References A, alloc_fft(), B, c, f, fft_type, filter(), forward_fft(), free_fft(), gaussballfunction(), gaussballsigma, gaussellipsoidfunction(), gausssigma11, gausssigma12, gausssigma22, i, inverse_fft(), j, N1, N2, phi, PI, and substitute().
.PP
Referenced by main().
.SS "void gaussian_kernel_filter (short ** f, short ** fs, int N1, int N2, int m, float rf)"
.PP
Definition at line 27 of file oldfilters.c.
.PP
References f, gaussfilterparam, gaussianfilterfunc(), kernel_filter(), m, N1, and N2.
.PP
Referenced by main().
.SS "float gaussianfilterfunc (int i, int j)"
.PP
Definition at line 432 of file filters.c.
.PP
References gaussfilterparam, i, j, z, and ZMAX.
.SS "void kernel_filter (short ** f, short ** fs, int N1, int N2, int m, float(* filterfunc)(int \fBdi\fP, int \fBdj\fP))"
.PP
Definition at line 34 of file oldfilters.c.
.PP
References error_exit, f, free(), i, j, k, m, max, min, N1, N2, and SHORT_MAGIC.
.PP
Referenced by gaussian_kernel_filter().
.SS "void kolmogorovfilter (float ** f, int N1, int N2, float ** fs, float sigma, float magicsubstitute)"
.PP
Definition at line 206 of file filters.c.
.PP
References alloc_fft(), f, fft_type, filter(), forward_fft(), free_fft(), i, inverse_fft(), j, kolmogorovfilterfunction(), kolmogorovsigmasquared, N1, N2, sigma, and substitute().
.PP
Referenced by main().
.SS "float kolmogorovfilterfunction (float ki, float kj)"
.PP
Definition at line 454 of file filters.c.
.PP
References kk, and kolmogorovsigmasquared.
.SS "void mexicanfilter (float ** f, int N1, int N2, float ** fs, float sigma1, float sigma2, float magicsubstitute)"
.PP
Definition at line 351 of file filters.c.
.PP
References alloc_fft(), f, fft_type, filter(), forward_fft(), free_fft(), inverse_fft(), mexicanfilterfunction(), mexicansigma1, mexicansigma2, N1, N2, and substitute().
.PP
Referenced by main().
.SS "float mexicanfilterfunction (float ki, float kj)"
.PP
Definition at line 498 of file filters.c.
.PP
References kk, mexicansigma1, and mexicansigma2.
.SS "void powerlawfilter (float ** f, int N1, int N2, float ** fs, float alpha, float magicsubstitute)"
.PP
Definition at line 385 of file filters.c.
.PP
References alloc_fft(), alpha, f, fft_type, filter(), forward_fft(), free_fft(), inverse_fft(), N1, N2, powerlawalpha, powerlawfilterfunction(), and substitute().
.PP
Referenced by main().
.SS "float powerlawfilterfunction (float ki, float kj)"
.PP
Definition at line 508 of file filters.c.
.PP
References kk, and powerlawalpha.
.SS "void powerspectrum (float ** f, int N1, int N2, float ** P, int ** nmodes)"
.PP
2-D power spectrum analysis. f[][] is N2 * N1 array. N must be power of two. P[] and nmodes[] must be allocated by calling function with dimension N / 2.
.PP
Result is P[k] = sum f exp(\fBik.r\fP) averages on rings in k-space. Array nmodes[k] contains the number of modes used in averaging which is needed for uncertainty. Definition at line 417 of file filters.c.
.PP
References error_exit.
.SS "void schecterfilter (float ** f, int N1, int N2, float ** fs, float sigma1, float sigma2, float alpha, float magicsubstitute)"
.PP
Definition at line 155 of file filters.c.
.PP
References alloc_fft(), alpha, f, fft_type, filter(), forward_fft(), free_fft(), i, inverse_fft(), j, N1, N2, schecteralpha, schecterfilterfunction(), schectersigma1, schectersigma2, and substitute().
.PP
Referenced by main().
.SS "float schecterfilterfunction (float ki, float kj)"
.PP
Definition at line 444 of file filters.c.
.PP
References kk, schecteralpha, schectersigma1, and schectersigma2.
.SS "void tukey (short ** f, int N1, int N2)"
.PP
Definition at line 123 of file oldfilters.c.
.PP
References f, i, j, max, min, N1, and N2.
.PP
Referenced by main().
.SH "Author"
.PP 
Generated automatically by Doxygen for imcat from the source code.
